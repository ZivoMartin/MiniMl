(*
Explication :
Ce programme définit une fonction id, prenant un argument x et le renvoyant. Cette fonction est définie de manière récursive.

Le type de id est polymorphe, car il peut accepter n'importe quel type pour x, et renvoyer une valeur du même type.

L'appel id 5 est valide avec un argument 5 de type int, et le programme doit assigner à id le type 'a -> 'a, où 'a est un type générique.

Contraintes générées :

Le type de id est 'a -> 'a.

La contrainte générée pour l'appel id 5 est : 'a = int.
*)

let id x = x
let y = id 5
